"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[424],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,g=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},59238:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const i={sidebar_position:3},l="\ud83c\udf29\ufe0f Addy",o={unversionedId:"Usage Example",id:"Usage Example",title:"\ud83c\udf29\ufe0f Addy",description:"Welcome to Addy, the Addy class is responsible for managing cloud configurations and interacting with rbx-cloud services. Follow this guide to learn how to utilize its powerful features for your Roblox projects!",source:"@site/docs/Usage Example.md",sourceDirName:".",slug:"/Usage Example",permalink:"/docs/Usage Example",draft:!1,editUrl:"https://github.com/KinqAndi/rbx-cloud/edit/master/docs/Usage Example.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"\ud83d\udce6 Download Package",permalink:"/docs/Download Package"}},u={},s=[{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"\ud83d\udcd6 Usage Example Go to API",id:"-usage-example-go-to-api",level:2},{value:"Creating an Instance of Addy",id:"creating-an-instance-of-addy",level:3},{value:"Retrieving a Serial Number",id:"retrieving-a-serial-number",level:3},{value:"Retrieving Multiple Serial Numbers (Bulk)",id:"retrieving-multiple-serial-numbers-bulk",level:3},{value:"Synchronous Retrieval (Optional)",id:"synchronous-retrieval-optional",level:3},{value:"Cleanup",id:"cleanup",level:3}],c={toc:s},d="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\ufe0f-addy"},"\ud83c\udf29\ufe0f Addy"),(0,a.kt)("p",null,"Welcome to ",(0,a.kt)("strong",{parentName:"p"},"Addy"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"Addy")," class is responsible for managing cloud configurations and interacting with ",(0,a.kt)("strong",{parentName:"p"},"rbx-cloud")," services. Follow this guide to learn how to utilize its powerful features for your Roblox projects!"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-installation"},"\ud83d\udce6 Installation"),(0,a.kt)("p",null,"You can install the Addy package either via ",(0,a.kt)("strong",{parentName:"p"},"Wally")," or directly from the ",(0,a.kt)("strong",{parentName:"p"},"Roblox Toolbox")," (",(0,a.kt)("a",{parentName:"p",href:"./Download%20Package"},"Tutorial Here"),")"),(0,a.kt)("h2",{id:"-usage-example-go-to-api"},"\ud83d\udcd6 Usage Example ",(0,a.kt)("a",{parentName:"h2",href:"/api"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Go%20to%20API-%F0%9F%94%8C-brightgreen",alt:"Go to API"}))),(0,a.kt)("h3",{id:"creating-an-instance-of-addy"},"Creating an Instance of Addy"),(0,a.kt)("p",null,"To get started, create a new instance of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Addy")," class using your cloud configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Addy = require(Packages.Addy)\n\nlocal cloudConfig = {\n    universeId = 123456789,\n    authToken = "your-auth-token",\n    CloudConfigEnum = Addy.CloudConfigEnums.SerialIndex,\n    MaxRetries = 3,\n    RetryDelay = 5,\n}\n\nlocal addyInstance = Addy.new(cloudConfig)\n')),(0,a.kt)("h3",{id:"retrieving-a-serial-number"},"Retrieving a Serial Number"),(0,a.kt)("p",null,"You can retrieve a serial number for a unique ID using the ",(0,a.kt)("inlineCode",{parentName:"p"},"GetSerial")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local uniqueId = "item12345"\naddyInstance:GetSerial(uniqueId):andThen(function(serialNumber)\n    print("Serial number for " .. uniqueId .. ": " .. serialNumber)\nend):catch(function(error)\n    warn("Failed to retrieve serial: " .. error)\nend)\n')),(0,a.kt)("h3",{id:"retrieving-multiple-serial-numbers-bulk"},"Retrieving Multiple Serial Numbers (Bulk)"),(0,a.kt)("p",null,"You can retrieve serial numbers for multiple unique IDs using ",(0,a.kt)("inlineCode",{parentName:"p"},"GetBulkSerial"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local uniqueIds = {"item12345", "item67890", "item111213"}\naddyInstance:GetBulkSerial(uniqueIds):andThen(function(serialNumbers)\n    for i, serial in ipairs(serialNumbers) do\n        print("Serial for " .. uniqueIds[i] .. ": " .. serial)\n    end\nend):catch(function(error)\n    warn("Failed to retrieve serials: " .. error)\nend)\n')),(0,a.kt)("h3",{id:"synchronous-retrieval-optional"},"Synchronous Retrieval (Optional)"),(0,a.kt)("p",null,"If you prefer synchronous operations, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"GetSerialAsync")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"GetBulkSerialAsync")," methods:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local serial = addyInstance:GetSerialAsync("item12345")\nprint("Synchronous serial number: " .. (serial or "Failed"))\n\nlocal bulkSerials = addyInstance:GetBulkSerialAsync({"item12345", "item67890"})\nprint("Synchronous bulk serials: ", bulkSerials)\n')),(0,a.kt)("h3",{id:"cleanup"},"Cleanup"),(0,a.kt)("p",null,"Once you're done with the ",(0,a.kt)("inlineCode",{parentName:"p"},"Addy")," instance, make sure to properly clean it up:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"addyInstance:Destroy()\n")))}p.isMDXComponent=!0}}]);